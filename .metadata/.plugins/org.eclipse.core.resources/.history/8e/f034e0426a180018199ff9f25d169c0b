/*
 * beads.cpp
 *
 *  Created on: Feb 21, 2018
 *      Author: Sumayya Syeda
 */
#include <iostream>
#include <fstream>
using namespace std;

int main(){
	int length = 29;
	string necklace = "wwwbbrwrbrbrrbrbrwrwwrbwrwrrb";
	int highestCount = 0;

	/*
	 * between each letter, make cut
	 * count left, count right
	 * if w first until not w, keep adding, once not w, save letter found, until diff letter, keep counting
	 * if not w first, keep cpunting until diff letter, if w found, count as well
	 *
	 * loop continues until meeting letter before. ex: cut 4, loop around till cut 5
	 * 		if 0, loop to last letter
	 * 		if last letter, loop to 0
	 *
	 * compare current count to highest count, if higher, highest count = current count
	 *
	 */
	for(int i = 0 ; i < length; i++){
		char leftLetter = necklace.at(i); //w
		char rightLetter;
		if (i+1 < length - 1)rightLetter = necklace.at(i+1);
		int currentCount = 0;


		//count left
		for(int l = i; l >= 0; l--){
			if(necklace[l] == leftLetter || necklace[l] == 'w') currentCount++;
			else break;
		}
		//count right

		for(int r = i+1; r < length-1; r++){
			if(necklace[r] == rightLetter || necklace[r] == 'w') currentCount++;
			else break;
		}

		if(currentCount > highestCount) highestCount = currentCount;

	}

	cout<<highestCount;
}


